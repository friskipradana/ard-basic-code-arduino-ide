// Author : Tigris Li <hello@tigris.li>
// Date   : 5th December 2021

#include<Arduino.h>
#include<U8g2lib.h>
#include<Wire.h>

//U8G2_SSD1306_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);
U8G2_SSD1306_128X32_UNIVISION_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE, /* clock=*/ SCL, /* data=*/ SDA);

// Copy the contents of your .xbm file below
#define heart_width 24
#define heart_height 24
const static unsigned char heart_bits[7][72] PROGMEM = {
  { // heart 1 - frame 0
    0x00, 0x00, 0x60, 0x00, 0x00, 0xFE, 0x00, 0x80, 0x43, 0x00, 0xC0, 0x40,
    0x00, 0x60, 0x40, 0x00, 0x90, 0x63, 0x00, 0xC8, 0x22, 0x00, 0x4C, 0x26,
    0x00, 0x46, 0x36, 0xA0, 0xC3, 0x13, 0xF8, 0x01, 0x08, 0x8C, 0x00, 0x06,
    0x4C, 0x00, 0x03, 0x7C, 0x80, 0x01, 0x30, 0xC0, 0x00, 0x30, 0x60, 0x00,
    0x70, 0x70, 0x00, 0x58, 0x2C, 0x00, 0xB8, 0x27, 0x00, 0xE6, 0x67, 0x00,
    0x43, 0x34, 0x00, 0x31, 0x1C, 0x00, 0x19, 0x00, 0x00, 0x0F, 0x00, 0x00,
  },
  { // heart 2 - frame 1
    0x00, 0x00, 0x60, 0x00, 0x00, 0xFE, 0x00, 0x80, 0x43, 0x00, 0xC0, 0x40,
    0x00, 0x20, 0x40, 0x00, 0xB0, 0x63, 0x00, 0xC8, 0x22, 0x00, 0x4C, 0x26,
    0x00, 0x46, 0x36, 0xA0, 0xC3, 0x13, 0xF8, 0x01, 0x0C, 0x8C, 0x00, 0x04,
    0x4C, 0x00, 0x03, 0x7C, 0x80, 0x01, 0x30, 0xC0, 0x00, 0x30, 0x60, 0x00,
    0x70, 0x70, 0x00, 0xD8, 0x2C, 0x00, 0x90, 0x67, 0x00, 0xEC, 0x27, 0x00,
    0x42, 0x34, 0x00, 0x36, 0x1C, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00,
  },
  { // heart 3 - frame 2
    0x00, 0x00, 0x60, 0x00, 0x00, 0xFE, 0x00, 0x80, 0x43, 0x00, 0xC0, 0x40,
    0x00, 0x20, 0x40, 0x00, 0xB0, 0x63, 0x00, 0xD8, 0x26, 0x00, 0x44, 0x24,
    0x00, 0x46, 0x36, 0xC0, 0xC3, 0x13, 0xF8, 0x01, 0x0C, 0x8C, 0x00, 0x04,
    0x4C, 0x00, 0x03, 0x7C, 0x80, 0x01, 0x30, 0xC0, 0x00, 0x30, 0x60, 0x00,
    0x70, 0x30, 0x00, 0xD8, 0x6C, 0x00, 0x98, 0x67, 0x00, 0xE4, 0x27, 0x00,
    0xD4, 0x34, 0x00, 0x1C, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  },
  { // heart 4 - frame 3
    0x00, 0x00, 0x60, 0x00, 0x00, 0xFE, 0x00, 0x80, 0x43, 0x00, 0xC0, 0x40,
    0x00, 0x60, 0x40, 0x00, 0x90, 0x63, 0x00, 0xC8, 0x26, 0x00, 0x4C, 0x24,
    0x00, 0x46, 0x36, 0xC0, 0x83, 0x13, 0xF8, 0x01, 0x0C, 0x8C, 0x00, 0x04,
    0x4C, 0x00, 0x03, 0x7C, 0x80, 0x01, 0x30, 0xC0, 0x00, 0x30, 0x60, 0x00,
    0x70, 0x30, 0x00, 0xD8, 0x6C, 0x00, 0x98, 0x27, 0x00, 0xE4, 0x67, 0x00,
    0x54, 0x34, 0x00, 0x1C, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  },
  { // heart 5 - frame 4
    0x00, 0x00, 0x60, 0x00, 0x00, 0x7E, 0x00, 0x80, 0xC3, 0x00, 0xC0, 0x40,
    0x00, 0x20, 0x40, 0x00, 0xB0, 0x43, 0x00, 0xC8, 0x66, 0x00, 0x4C, 0x24,
    0x00, 0x46, 0x36, 0xD0, 0x83, 0x13, 0xD8, 0x01, 0x0C, 0x8C, 0x00, 0x04,
    0x4C, 0x00, 0x03, 0x7C, 0x80, 0x01, 0x30, 0xC0, 0x00, 0x30, 0x60, 0x00,
    0x70, 0x30, 0x00, 0xD8, 0x6C, 0x00, 0xB0, 0x67, 0x00, 0xEC, 0x27, 0x00,
    0xA6, 0x34, 0x00, 0x1C, 0x1C, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
  },
  { // heart 6 - frame 5
    0x00, 0x00, 0x50, 0x00, 0x00, 0xBE, 0x00, 0x80, 0xC3, 0x00, 0xC0, 0x40,
    0x00, 0x20, 0x40, 0x00, 0xB0, 0x43, 0x00, 0xC8, 0x66, 0x00, 0x4C, 0x24,
    0x00, 0xC6, 0x36, 0xD0, 0x83, 0x13, 0xD8, 0x01, 0x0C, 0x8C, 0x00, 0x04,
    0x4C, 0x00, 0x03, 0x7C, 0x80, 0x01, 0x30, 0xC0, 0x00, 0x30, 0x60, 0x00,
    0x78, 0x30, 0x00, 0xD0, 0x6C, 0x00, 0xB8, 0x27, 0x00, 0xE6, 0x67, 0x00,
    0xA2, 0x3C, 0x00, 0x12, 0x18, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00,
  },
  { // heart 7 - frame 6
    0x00, 0x00, 0x70, 0x00, 0x00, 0xDE, 0x00, 0x80, 0xC3, 0x00, 0xC0, 0x40,
    0x00, 0x20, 0x40, 0x00, 0xB0, 0x43, 0x00, 0xD8, 0x66, 0x00, 0x4C, 0x24,
    0x00, 0xC6, 0x36, 0xF0, 0x83, 0x1B, 0xD8, 0x01, 0x0C, 0x8C, 0x00, 0x04,
    0xCC, 0x00, 0x03, 0x7C, 0x80, 0x01, 0x30, 0xC0, 0x00, 0x30, 0x60, 0x00,
    0x70, 0x78, 0x00, 0xD8, 0x4C, 0x00, 0xB8, 0x67, 0x00, 0xE6, 0x67, 0x00,
    0x82, 0x3C, 0x00, 0x33, 0x18, 0x00, 0x1F, 0x00, 0x00, 0x05, 0x00, 0x00,
  }
};

void drawAnimation(void) {
  // play images and animatio in our desired sequence order
  static uint8_t frame = 0 ;

  switch (frame) {
    case 0:
      Serial.println("start");
      break;
    case 1:
      u8g2.drawXBMP( 15, 7, heart_width, heart_height, heart_bits[0]);
      u8g2.drawStr(50, 25, "I'am Rcky");
      break;
    case 2:
      u8g2.drawXBMP( 15, 7, heart_width, heart_height, heart_bits[1]);
      u8g2.drawStr(50, 25, "I'am Rcky");
      break;
    case 3:
      u8g2.drawXBMP( 15, 7, heart_width, heart_height, heart_bits[2]);
      u8g2.drawStr(50, 25, "I'am Rcky");
      break;
    case 4:
      u8g2.drawXBMP( 15, 7, heart_width, heart_height, heart_bits[3]);
      u8g2.drawStr(50, 25, "I'am Rcky");
      break;
    case 5:
      u8g2.drawXBMP( 15, 7, heart_width, heart_height, heart_bits[4]);
      u8g2.drawStr(50, 25, "I'am Rcky");
      break;
    case 6:
      u8g2.drawXBMP( 15, 7, heart_width, heart_height, heart_bits[6]);
      u8g2.drawStr(50, 25, "I'am Rcky");
      break;
    case 7:
      u8g2.drawXBMP( 15, 7, heart_width, heart_height, heart_bits[6]);
      u8g2.drawStr(50, 25, "I'am Rcky");
      break;
    case 8:
      u8g2.drawXBMP( 15, 7, heart_width, heart_height, heart_bits[6]);
      u8g2.drawStr(50, 25, "I'am Rcky");
      break;
    case 9:
      u8g2.drawXBMP( 15, 7, heart_width, heart_height, heart_bits[5]);
      break;
    case 10:
      u8g2.drawXBMP( 15, 7, heart_width, heart_height, heart_bits[4]);
      break;
    case 11:
      u8g2.drawXBMP( 15, 7, heart_width, heart_height, heart_bits[3]);
      break;
    case 12:
      u8g2.drawXBMP( 15, 7, heart_width, heart_height, heart_bits[2]);
      break;
    case 13:
      u8g2.drawXBMP( 15, 7, heart_width, heart_height, heart_bits[1]);
      break;
    case 14:
      u8g2.drawXBMP( 15, 7, heart_width, heart_height, heart_bits[0]);
      break;


  }
  frame++;

  // number of frames to play before animation loops itself
  if (frame > 15) {
    frame = 0;
  }
}



void setup(void) {
  u8g2.begin();
  u8g2.clearBuffer(); u8g2.setFont(u8g2_font_tenthinguys_tr);
  u8g2.drawStr(40, 20, "Rocket");
  u8g2.sendBuffer();
  delay(1500);
}

void loop(void) {
  u8g2.firstPage();
  do {
    drawAnimation();
  } while ( u8g2.nextPage() );
  // rebuild the picture after some delay
  delay(10);

}
